name: 'docker build with s3 artifact action'
description: 'GitHub Action to build docker image with artifact from s3 using buildx'
author: 'PF'
inputs:
  aws_region:
    required: true
    description: 'AWS S3 region of artifact'
    default: 'eu-west-1'
  image_tags:
    required: true
    description: 'List of tags'
  buildx_driver_opts:
    required: true
    description: 'Buildx driver-opts'
    default: 'env.BUILDKIT_STEP_LOG_MAX_SIZE=-1'
  dockerfile:
    required: true
    description: 'Path to Dockerfile'
  context:
    required: true
    description: 'Docker context'
    default: '.'
  artifacts_bucket:
    required: true
    description: 'Name of S3 bucket with artifact'
  artifact_name_server:
    required: true
    description: 'Path to artifact file on S3 bucket.'
  cache_from:
    required: false
    description: 'External cache sources.'
  cache_to:
    required: false
    description: 'Cache export destinations.'
runs:
  using: 'composite'
  steps:
    - name: Download Artifact - server
      uses: leroy-merlin-br/action-s3-cache@v1
      with:
        action: get
        aws-region: ${{ inputs.aws_region }}
        bucket: ${{ inputs.artifacts_bucket }}
        key: ${{ inputs.artifact_name_server}}

    - name: Create docker context
      shell: bash
      run: |
        docker context create ctx

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      id: buildx
      with:
        version: v0.9.1
        endpoint: ctx
        driver-opts: ${{ inputs.buildx_driver_opts }}
        config-inline: |
          [registry."docker.io"]
            mirrors = ["docker-registry.kube.shared.pxfd.tech"]

    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ inputs.image_tags }}
        file: ${{ inputs.context }}/${{ inputs.dockerfile }}
        builder: ${{ steps.buildx.outputs.name }}
        context: ${{ inputs.context }}
        cache-from: ${{ inputs.cache_from }}
        cache-to: ${{ inputs.cache_to }}

